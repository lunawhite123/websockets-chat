version: '3.8' # Указываем версию формата Docker Compose файла

services: # Объявление всех сервисов (контейнеров)
  db: # Имя твоего сервиса (можешь назвать как угодно, но 'db' - стандартно для базы данных)
    image: postgres:16-alpine # Используемый образ Docker.
                              # 'postgres' - это официальный образ PostgreSQL.
                              # '16-alpine' - это тег версии, указывающий на PostgreSQL версии 16
                              #               и использование легковесной базы Alpine Linux.
    environment: # Переменные окружения, которые будут доступны внутри контейнера
      POSTGRES_DB: db      # Имя базы данных, которую создаст PostgreSQL при первом запуске
      POSTGRES_USER: user             # Имя пользователя для подключения к этой БД
      POSTGRES_PASSWORD: password    # Пароль для этого пользователя
    ports: # Проброс портов между хостом (твоим компьютером) и контейнером
      - "5432:5432" # Левая часть "5432" - порт на твоём компьютере (хосте).
                    # Правая часть "5432" - порт внутри контейнера, на котором слушает PostgreSQL.
                    # Это позволяет твоему FastAPI-приложению (на хосте) подключаться к БД в контейнере по localhost:5432.
    volumes: # Управление постоянным хранилищем данных
      - postgres_data:/var/lib/postgresql/data # Это строка связывает названный том 'postgres_data'
                                                # на твоём компьютере с папкой, где PostgreSQL хранит свои данные
                                                # внутри контейнера.
                                                # Это КРАЙНЕ важно, чтобы твои данные (сокращенные ссылки)
                                                # не терялись при перезапуске или удалении контейнера!
    healthcheck: # Проверка работоспособности сервиса (необязательно, но полезно)
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"] # Команда для проверки статуса БД
      interval: 5s # Интервал проверки
      timeout: 5s  # Таймаут для проверки
      retries: 5   # Количество попыток перед объявлением сервиса нездоровым

volumes: # Определение названного тома 'postgres_data' (он будет создан Docker'ом)
  postgres_data: